// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AccountOperationDbContext))]
    [Migration("20220911144541_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<int>("CustomerType")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasDiscriminator<int>("CustomerType").HasValue(1);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Currency = 1,
                            CustomerType = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Currency = 2,
                            CustomerType = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            Currency = 1,
                            CustomerType = 1,
                            Status = 2
                        });
                });

            modelBuilder.Entity("Domain.Entities.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("OperationType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Transaction");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 1,
                            Amount = 100m,
                            Currency = 1,
                            Date = new DateTime(2022, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OperationType = 1
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 1,
                            Amount = 100m,
                            Currency = 1,
                            Date = new DateTime(2022, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OperationType = 1
                        },
                        new
                        {
                            Id = 3,
                            AccountId = 2,
                            Amount = 50m,
                            Currency = 2,
                            Date = new DateTime(2022, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OperationType = 1
                        },
                        new
                        {
                            Id = 4,
                            AccountId = 3,
                            Amount = 100m,
                            Currency = 1,
                            Date = new DateTime(2022, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OperationType = 1
                        });
                });

            modelBuilder.Entity("Domain.Entities.AccountVIP", b =>
                {
                    b.HasBaseType("Domain.Entities.Account");

                    b.Property<decimal>("CashBack")
                        .HasColumnType("decimal(18,2)");

                    b.HasDiscriminator().HasValue(2);

                    b.HasData(
                        new
                        {
                            Id = 4,
                            Currency = 1,
                            CustomerType = 2,
                            Status = 1,
                            CashBack = 0.01m
                        },
                        new
                        {
                            Id = 5,
                            Currency = 2,
                            CustomerType = 2,
                            Status = 1,
                            CashBack = 0.05m
                        },
                        new
                        {
                            Id = 6,
                            Currency = 1,
                            CustomerType = 2,
                            Status = 2,
                            CashBack = 0.01m
                        });
                });

            modelBuilder.Entity("Domain.Entities.Transaction", b =>
                {
                    b.HasOne("Domain.Entities.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Domain.Entities.Account", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
